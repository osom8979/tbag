// tpot packet protocols.

namespace libtbag.proto.fbs.tpot;

enum ResultCode : int
{
    SUCCESS = 0,
    UNKNOWN_ERROR,
    EXECUTE_ERROR,
    NOT_EXISTS,
    KILL_ERROR,
    RC_REMOVE_ERROR,
}

/// Tpot(libtbag) protocol version.
struct Version
{
    major : uint = 0;
    minor : uint = 1;
}

// ------
// Tables
// ------

table Pair
{
    key : string;
    val : string;
}

table ProcessInfo
{
    pid    : int;
    active : bool;
    infos  : [Pair];
}

table Header
{
    id    : ulong;
    code  : ResultCode;
    infos : [Pair];
}

// ---------------------------
// Tables (Request & Response)
// ---------------------------

table VersionRequest
{
    // EMPTY.
}

table VersionResponse
{
    version  : Version;
    features : [Pair];
}

table EchoRequest
{
    msg : string;
}

table EchoResponse
{
    msg : string;
}

table LoginRequest
{
    id : string;
    pw : string;
}

table LoginResponse
{
    key : string; // Authentication information.
}

table LogoutRequest
{
    // EMPTY.
}

table LogoutResponse
{
    // EMPTY.
}

table ExecRequest
{
    file  : string;
    args  : [string];
    envs  : [string];
    cwd   : string;
    input : string;
}

table ExecResponse
{
    pid : int;
}

table ProcessListRequest
{
    // EMPTY.
}

table ProcessListResponse
{
    procs : [ProcessInfo];
}

table ProcessKillRequest
{
    pid    : int;
    signum : int;
}

table ProcessKillResponse
{
    // EMPTY.
}

table ProcessRemoveRequest
{
    pid : int;
}

table ProcessRemoveResponse
{
    // EMPTY.
}

union AnyPacket
{
    VersionRequest,
    VersionResponse,

    EchoRequest,
    EchoResponse,

    LoginRequest,
    LoginResponse,
    LogoutRequest,
    LogoutResponse,

    ExecRequest,
    ExecResponse,
    ProcessListRequest,
    ProcessListResponse,
    ProcessKillRequest,
    ProcessKillResponse,
    ProcessRemoveRequest,
    ProcessRemoveResponse,
}

table TpotPacket
{
    header : Header;
    packet : AnyPacket;
}

root_type TpotPacket;

