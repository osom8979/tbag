/**
 * @file   Tces.hpp
 * @brief  Terminal Control Escape Sequences.
 * @author zer0
 * @date   2016-07-21
 *
 * @remarks
 *  ANSI/VT100 Terminal Control Escape Sequences
 *
 * @see <http://www.termsys.demon.co.uk/vtansi.htm>
 * @see <http://misc.flogisoft.com/bash/tip_colors_and_formatting>
 */

#ifndef __INCLUDE_LIBTBAG__LIBTBAG_TTY_TCES_HPP__
#define __INCLUDE_LIBTBAG__LIBTBAG_TTY_TCES_HPP__

// MS compatible compilers support #pragma once
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#include <libtbag/config.h>
#include <libtbag/predef.hpp>
#include <libtbag/preprocessor/facilities/Expend.hpp>
#include <libtbag/preprocessor/details/Cat.hpp>

#define TBAG_TTY_DISPLAY_ATTRIBUTE_RESET      "\x1B[0m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_BRIGHT     "\x1B[1m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_DIM        "\x1B[2m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_UNDERSCORE "\x1B[4m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_BLINK      "\x1B[5m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_REVERSE    "\x1B[7m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_HIDDEN     "\x1B[8m"

#define TBAG_TTY_DISPLAY_ATTRIBUTE_FG_BLACK   "\x1B[30m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_FG_RED     "\x1B[31m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_FG_GREEN   "\x1B[32m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_FG_YELLOW  "\x1B[33m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_FG_BLUE    "\x1B[34m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_FG_MAGENTA "\x1B[35m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_FG_CYAN    "\x1B[36m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_FG_WHITE   "\x1B[37m"

#define TBAG_TTY_DISPLAY_ATTRIBUTE_BG_BLACK   "\x1B[40m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_BG_RED     "\x1B[41m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_BG_GREEN   "\x1B[42m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_BG_YELLOW  "\x1B[43m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_BG_BLUE    "\x1B[44m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_BG_MAGENTA "\x1B[45m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_BG_CYAN    "\x1B[46m"
#define TBAG_TTY_DISPLAY_ATTRIBUTE_BG_WHITE   "\x1B[47m"

#if defined(TBAG_PLATFORM_WINDOWS)
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_RESET
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BRIGHT
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_DIM
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_UNDERSCORE
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BLINK
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_REVERSE
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_HIDDEN

# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_FG_BLACK
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_FG_RED
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_FG_GREEN
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_FG_YELLOW
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_FG_BLUE
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_FG_MAGENTA
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_FG_CYAN
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_FG_WHITE

# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BG_BLACK
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BG_RED
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BG_GREEN
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BG_YELLOW
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BG_BLUE
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BG_MAGENTA
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BG_CYAN
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BG_WHITE
#else
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_RESET      TBAG_TTY_DISPLAY_ATTRIBUTE_RESET
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BRIGHT     TBAG_TTY_DISPLAY_ATTRIBUTE_BRIGHT
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_DIM        TBAG_TTY_DISPLAY_ATTRIBUTE_DIM
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_UNDERSCORE TBAG_TTY_DISPLAY_ATTRIBUTE_UNDERSCORE
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BLINK      TBAG_TTY_DISPLAY_ATTRIBUTE_BLINK
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_REVERSE    TBAG_TTY_DISPLAY_ATTRIBUTE_REVERSE
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_HIDDEN     TBAG_TTY_DISPLAY_ATTRIBUTE_HIDDEN

# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_FG_BLACK   TBAG_TTY_DISPLAY_ATTRIBUTE_FG_BLACK
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_FG_RED     TBAG_TTY_DISPLAY_ATTRIBUTE_FG_RED
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_FG_GREEN   TBAG_TTY_DISPLAY_ATTRIBUTE_FG_GREEN
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_FG_YELLOW  TBAG_TTY_DISPLAY_ATTRIBUTE_FG_YELLOW
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_FG_BLUE    TBAG_TTY_DISPLAY_ATTRIBUTE_FG_BLUE
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_FG_MAGENTA TBAG_TTY_DISPLAY_ATTRIBUTE_FG_MAGENTA
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_FG_CYAN    TBAG_TTY_DISPLAY_ATTRIBUTE_FG_CYAN
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_FG_WHITE   TBAG_TTY_DISPLAY_ATTRIBUTE_FG_WHITE

# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BG_BLACK   TBAG_TTY_DISPLAY_ATTRIBUTE_BG_BLACK
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BG_RED     TBAG_TTY_DISPLAY_ATTRIBUTE_BG_RED
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BG_GREEN   TBAG_TTY_DISPLAY_ATTRIBUTE_BG_GREEN
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BG_YELLOW  TBAG_TTY_DISPLAY_ATTRIBUTE_BG_YELLOW
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BG_BLUE    TBAG_TTY_DISPLAY_ATTRIBUTE_BG_BLUE
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BG_MAGENTA TBAG_TTY_DISPLAY_ATTRIBUTE_BG_MAGENTA
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BG_CYAN    TBAG_TTY_DISPLAY_ATTRIBUTE_BG_CYAN
# define TBAG_OS_TTY_DISPLAY_ATTRIBUTE_BG_WHITE   TBAG_TTY_DISPLAY_ATTRIBUTE_BG_WHITE
#endif

// -------------------
NAMESPACE_LIBTBAG_OPEN
// -------------------

namespace tty {

// ----------------------------------------------
// Set Attribute Mode: <ESC>[{attr1};...;{attrn}m
// ----------------------------------------------

TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_RESET      = TBAG_TTY_DISPLAY_ATTRIBUTE_RESET;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_BRIGHT     = TBAG_TTY_DISPLAY_ATTRIBUTE_BRIGHT;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_DIM        = TBAG_TTY_DISPLAY_ATTRIBUTE_DIM;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_UNDERSCORE = TBAG_TTY_DISPLAY_ATTRIBUTE_UNDERSCORE;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_BLINK      = TBAG_TTY_DISPLAY_ATTRIBUTE_BLINK;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_REVERSE    = TBAG_TTY_DISPLAY_ATTRIBUTE_REVERSE;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_HIDDEN     = TBAG_TTY_DISPLAY_ATTRIBUTE_HIDDEN;

// Foreground Colours
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_FG_BLACK   = TBAG_TTY_DISPLAY_ATTRIBUTE_FG_BLACK;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_FG_RED     = TBAG_TTY_DISPLAY_ATTRIBUTE_FG_RED;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_FG_GREEN   = TBAG_TTY_DISPLAY_ATTRIBUTE_FG_GREEN;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_FG_YELLOW  = TBAG_TTY_DISPLAY_ATTRIBUTE_FG_YELLOW;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_FG_BLUE    = TBAG_TTY_DISPLAY_ATTRIBUTE_FG_BLUE;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_FG_MAGENTA = TBAG_TTY_DISPLAY_ATTRIBUTE_FG_MAGENTA;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_FG_CYAN    = TBAG_TTY_DISPLAY_ATTRIBUTE_FG_CYAN;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_FG_WHITE   = TBAG_TTY_DISPLAY_ATTRIBUTE_FG_WHITE;

// Background Colours
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_BG_BLACK   = TBAG_TTY_DISPLAY_ATTRIBUTE_BG_BLACK;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_BG_RED     = TBAG_TTY_DISPLAY_ATTRIBUTE_BG_RED;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_BG_GREEN   = TBAG_TTY_DISPLAY_ATTRIBUTE_BG_GREEN;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_BG_YELLOW  = TBAG_TTY_DISPLAY_ATTRIBUTE_BG_YELLOW;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_BG_BLUE    = TBAG_TTY_DISPLAY_ATTRIBUTE_BG_BLUE;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_BG_MAGENTA = TBAG_TTY_DISPLAY_ATTRIBUTE_BG_MAGENTA;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_BG_CYAN    = TBAG_TTY_DISPLAY_ATTRIBUTE_BG_CYAN;
TBAG_CONSTEXPR char const * const DISPLAY_ATTRIBUTE_BG_WHITE   = TBAG_TTY_DISPLAY_ATTRIBUTE_BG_WHITE;

// ------------------
// WIDE CHAR VERSION.
// ------------------

TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_RESET_WIDE      = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_RESET));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_BRIGHT_WIDE     = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_BRIGHT));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_DIM_WIDE        = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_DIM));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_UNDERSCORE_WIDE = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_UNDERSCORE));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_BLINK_WIDE      = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_BLINK));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_REVERSE_WIDE    = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_REVERSE));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_HIDDEN_WIDE     = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_HIDDEN));

// Foreground Colours
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_FG_BLACK_WIDE   = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_FG_BLACK));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_FG_RED_WIDE     = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_FG_RED));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_FG_GREEN_WIDE   = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_FG_GREEN));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_FG_YELLOW_WIDE  = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_FG_YELLOW));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_FG_BLUE_WIDE    = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_FG_BLUE));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_FG_MAGENTA_WIDE = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_FG_MAGENTA));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_FG_CYAN_WIDE    = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_FG_CYAN));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_FG_WHITE_WIDE   = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_FG_WHITE));

// Background Colours
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_BG_BLACK_WIDE   = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_BG_BLACK));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_BG_RED_WIDE     = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_BG_RED));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_BG_GREEN_WIDE   = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_BG_GREEN));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_BG_YELLOW_WIDE  = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_BG_YELLOW));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_BG_BLUE_WIDE    = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_BG_BLUE));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_BG_MAGENTA_WIDE = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_BG_MAGENTA));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_BG_CYAN_WIDE    = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_BG_CYAN));
TBAG_CONSTEXPR wchar_t const * const DISPLAY_ATTRIBUTE_BG_WHITE_WIDE   = TBAG_PP_CAT(L, TBAG_PP_EXPAND(TBAG_TTY_DISPLAY_ATTRIBUTE_BG_WHITE));

} // namespace tty

// --------------------
NAMESPACE_LIBTBAG_CLOSE
// --------------------

#endif // __INCLUDE_LIBTBAG__LIBTBAG_TTY_TCES_HPP__

